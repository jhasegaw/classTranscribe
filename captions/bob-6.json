[{"text":"Now let's talk about pointers and arrays","width":224},{"text":"how might I make an array of integers?","width":179},{"text":"let's say I had some data and I did this","width":241},{"text":"well, on this particular architecture we just found out that an integer is four bytes","width":272},{"text":"so I've now got thirty two bytes of storage","width":226},{"text":"and in fact, it's going to be thirty two bytes on the stack","width":209},{"text":"so what do I have here?","width":120},{"text":"when I say data square brackets eight, I'm going to get back four times eight, thirty two bytes all together","width":456},{"text":"all contiguous in memory","width":117},{"text":"and in fact, data is going to point to  the very first four bytes","width":240},{"text":"so I've got four bytes and then four bytes and then four bytes and then four bytes and so on","width":364},{"text":"let's have a look at that","width":116},{"text":"so, if I say printf data is at and this time do %p, that means treat data as and print it out as an address","width":760},{"text":"so we'll print this out","width":538},{"text":"and we see we've got a value here in memory","width":253},{"text":"that data points to the very first element","width":191},{"text":"let's do something a little bit surprising here","width":133},{"text":"let's add one to data and print that out","width":257},{"text":"so, data plus one","width":161},{"text":"and we'll do data plus two","width":244},{"text":"and so on","width":626},{"text":"so, if we look over here at our output, we'll see that each time we add one, our address in hexadecimal is going up by four each time","width":563},{"text":"so we've got 9d40, 9d44, 9d48","width":323},{"text":"here's why","width":43},{"text":"when you add an integer to an address pointer","width":308},{"text":"C knows the type of that pointer","width":209},{"text":"so in this case, we're pointing at integers","width":135},{"text":"so each time we add one, we actually want to progress to the next integer stored in memory","width":306},{"text":"and as each integer takes four bytes, that's why our address is going up by four each time","width":483},{"text":"so how could I use this?","width":101},{"text":"well, one way is to use asterisk which means use the address so, for example, I can say data the parenthesis are not strictly necessary but we'll use them in a moment","width":941},{"text":"and let's say store the value a hundred in there","width":188},{"text":"what about if I wanted to store some value at the next entry?","width":383},{"text":"ok so, hundred, hundred one","width":123},{"text":"so now I've stored the value a hundred that integer pattern into the first four bytes","width":376},{"text":"and the integer pattern for a hundred and one in the next four bytes","width":358},{"text":"and I guess you could figure out what this would do as well","width":374},{"text":"the asterisks means use the pointer follow the pointer dereference the pointer","width":409},{"text":"in other word, we've got an expression which is a memory address, now I want to use it","width":291},{"text":"now I actually want to use that pattern that bitwise pattern to actually read or write some memory","width":469},{"text":"so that's what the asterisk does means actually okay it's time to go and talk to memory","width":288},{"text":"this is so useful with arrays","width":127},{"text":"there is an alternative syntax which is to use the square brackets","width":228},{"text":"so for example I could have written the following","width":300},{"text":"which means take my address pointer add two to it and use that address for the array","width":473},{"text":"so these last two lines are the same","width":133},{"text":"in fact, here's a little secret about C that I could actually swap these around","width":319},{"text":"so we could also write this in this slightly crazy way","width":418},{"text":"so this is crazy but actually two square bracket data would evaluate to the same thing","width":396},{"text":"so that's something to confuse your non-C friends with","width":377},{"text":"that's enough with me playing with integer pointers","width":272},{"text":"now, it's your turn. Bye!","width":188}]