[{"text":"Hello welcome","width":135},{"text":"so this video is a little introduction to signals","width":222},{"text":"so signals are like a software interrupt","width":198},{"text":"we can use them to control our processes and even do things asynchronously","width":322},{"text":"so let's have a look at a little program i have written so far that doesn't use signals yet","width":333},{"text":"all it does is ask for the environment of home","width":181},{"text":"in other words the user's home directory","width":172},{"text":"and then we have a little loop that prints it out and sleeps for three seconds","width":314},{"text":"so every three seconds it is going to print out my home directory","width":211},{"text":"and on this machine i am root so it just keeps on printing out slash root","width":387},{"text":"so of course we can stop this program by pressing control c","width":383},{"text":"and when you do that you actually are sending a signal","width":195},{"text":"sigint or sig interrupt to the process","width":261},{"text":"now it maybe that our process doesn't like being interrupted","width":198},{"text":"why don't we catch that signal and install our own little handle for that","width":319},{"text":"so here is how we will do this","width":158},{"text":"i am going to say at the beginning of my program that if you get a certain signal say sigint ","width":797},{"text":"rather than having the default behavior which as we know is to stop the program or quit the program","width":367},{"text":"let us run my code instead","width":113},{"text":"so i will call it say nothankyou","width":227},{"text":"so what is nothankyou","width":113},{"text":"it has to be a pointer to a function","width":252},{"text":"how do we do that","width":61},{"text":"easy just write a function","width":75},{"text":"and in this case the correct type is something that doesn't return anything","width":310},{"text":"but does take an integer","width":136},{"text":"in fact it is the signal that is being sent to our program","width":253},{"text":"and so that we know that this is being called let's write something out directly to standard output","width":342},{"text":"so i can say write and i can say no","width":219},{"text":"so what is that that is a little message of three bytes to send","width":228},{"text":"so let's run this now","width":155},{"text":"okay so here is my program every three seconds it is going to print root","width":248},{"text":"but now i am going to press control c","width":359},{"text":"and it prints no no so it's refusing to quit","width":405},{"text":"you might also notice that the sleep also immediately returns","width":242},{"text":"more about that later","width":99},{"text":"it is still possible to stop our program here","width":180},{"text":"if we do control backslash then we force it to quit","width":382},{"text":"so sigint is one common signal that we send our programs","width":259},{"text":"there are many others","width":92},{"text":"just for fun let me show you one called sigalarm","width":239},{"text":"so this time i am going to say alarm seven seconds","width":498},{"text":"and so when you call alarm you are going to say give me a special signal called sigalrm in this many seconds","width":626},{"text":"in seven seconds","width":82},{"text":"and we better install then","width":112},{"text":"well let's just run it and see what happens to begin with","width":795},{"text":"so the default behavior of this sigalrm is to actually stop our program","width":299},{"text":"it quits the program","width":103},{"text":"that's a pretty aggressive alarm clock i think you'll agree","width":175},{"text":"and it also as you see prints out alarm clock on the shell","width":233},{"text":"perhaps we don't want our alarm signal to be so menacing","width":308},{"text":"so this time instead of sigint i can say look for a certain signal called sigalrm","width":452},{"text":"please call my function instead","width":515},{"text":"okay so there we go our alarm went off after four seconds and this time we asynchronously ran our code that printed out no to standard out","width":704},{"text":"so this is pretty exciting right","width":98},{"text":"you probably thought about interrupts on the hardware level","width":228},{"text":"now we can do interrupts at the software level and we can respond to things which happen in our environment very quickly","width":459},{"text":"so we will find signals to be very useful when we start dealing working with more than one process","width":381},{"text":"we can control our programs and we can also work with very large amounts of data coming in","width":371},{"text":"alright that is enough for me","width":106},{"text":"bye","width":36}]